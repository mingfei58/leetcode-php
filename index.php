<?php


//https://learnku.com/articles/20714
//http://c.biancheng.net/view/3339.html
//https://www.modb.pro/db/72128
//https://www.edrawmax.cn/online/zh/workbench
//数据结构

//存储具有复杂关系的数据方便于后期对数据的再利用



//存储方式

//线性表：顺序表、链表、栈、队列
//树结构：普通树、二叉树、线索二叉树
//图结构：



//线性表

//具有 '一对一' 逻辑关系的数据“线性”地存储到物理空间中

//顺序表

//具有 '一对一' 逻辑关系的数据按照次序连续存储到一整块物理空间上

//链表

//具有 '一对一' 逻辑关系的数据随机存储并通过指针表示数据之间逻辑关系

//静态链表

//顺序表+链表
//增加元素
//1.查找备用链表表头节点的下个节点，2向该节点添加元素，并将下个节点指针指向备用链表表头节点，3修改备用链表表头节点下个节点的指针
//查找元素
//1.挨个查找链表元素
//修改元素
//1.挨个查找链表元素，2.修改元素的值
//删除元素
//1.挨个查找链表元素，2.




//跳跃表

//节点元素之间具有'一对一'的逻辑关系且有序排列，节点之间的逻辑关系通过在每个节点中维持多个指向其他节点的指针，从而达到快速访问节点的目的

//栈

//只能从线性表的一端存储数据且遵循先进后出原则

//队列

//从线性表的一端进另一端出且遵循先进先出原则


//树结构

//具有 '一对多' 逻辑关系的数据集合

//特点：结点、树根结点、叶子结点、父结点、子结点、兄弟结点

//子树和空树

//结点的度和层次、数的最大深度



//图结构

//具有 '多对多' 逻辑关系的数据集合


//算法

//时间复杂度：衡量程序运行时间

//空间复杂度：衡量程序运行空间

//常用复杂度关系：O(1)常数阶<O(logn)对数阶<O(n)线性阶<O(n2)平方阶<O(n3)立方阶<O(2^n)指数阶